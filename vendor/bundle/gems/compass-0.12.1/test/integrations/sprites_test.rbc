!RBIX
9595534255132031488
x
M
1
n
n
x
10
__script__
i
80
5
7
0
64
47
49
1
1
15
5
7
2
64
47
49
1
1
15
5
7
3
64
47
49
1
1
15
5
7
4
64
47
49
1
1
15
5
7
5
64
47
49
1
1
15
99
7
6
45
7
8
43
9
43
10
65
49
11
3
13
99
12
7
12
12
7
13
12
65
12
49
14
4
15
49
12
0
15
2
11
I
6
I
0
I
0
I
0
n
p
15
s
11
test_helper
x
7
require
s
9
fileutils
s
7
compass
s
14
compass/logger
s
11
sass/plugin
x
11
SpritesTest
x
4
Test
n
x
4
Unit
x
8
TestCase
x
10
open_class
x
14
__class_init__
M
1
n
n
x
11
SpritesTest
i
419
5
66
99
7
0
7
1
65
67
49
2
0
49
3
4
15
99
7
4
7
5
65
67
49
2
0
49
3
4
15
99
7
6
7
7
65
67
49
2
0
49
3
4
15
99
7
8
7
9
65
67
49
2
0
49
3
4
15
99
7
10
7
11
65
67
49
2
0
49
3
4
15
99
7
12
7
13
65
67
49
2
0
49
3
4
15
99
7
14
7
15
65
67
49
2
0
49
3
4
15
5
7
16
64
56
17
47
50
18
1
15
5
7
19
64
56
20
47
50
18
1
15
5
7
21
64
56
22
47
50
18
1
15
5
7
23
64
56
24
47
50
18
1
15
5
7
25
64
56
26
47
50
18
1
15
5
7
27
64
56
28
47
50
18
1
15
5
7
29
64
56
30
47
50
18
1
15
5
7
31
64
56
32
47
50
18
1
15
5
7
33
64
56
34
47
50
18
1
15
5
7
35
64
56
36
47
50
18
1
15
5
7
37
64
56
38
47
50
18
1
15
5
7
39
64
56
40
47
50
18
1
15
5
7
41
64
56
42
47
50
18
1
15
5
7
43
64
56
44
47
50
18
1
15
5
7
45
64
56
46
47
50
18
1
15
5
7
47
64
56
48
47
50
18
1
15
5
7
49
64
56
50
47
50
18
1
15
5
7
51
64
56
52
47
50
18
1
15
5
7
53
64
56
54
47
50
18
1
15
5
7
55
64
56
56
47
50
18
1
15
5
7
57
64
56
58
47
50
18
1
15
5
7
59
64
56
60
47
50
18
1
15
5
7
61
64
56
62
47
50
18
1
15
5
7
63
64
56
64
47
50
18
1
15
5
7
65
64
56
66
47
50
18
1
15
5
7
67
64
56
68
47
50
18
1
15
5
7
69
64
56
70
47
50
18
1
15
5
7
71
64
56
72
47
50
18
1
15
5
7
73
64
56
74
47
50
18
1
11
I
5
I
0
I
0
I
0
n
p
75
x
5
setup
M
1
n
n
x
5
setup
i
194
45
0
1
49
2
0
15
45
3
4
45
3
5
65
49
6
0
49
7
1
7
8
64
7
9
64
7
10
64
7
11
64
7
12
64
49
13
6
38
14
15
45
3
15
45
3
16
65
49
6
0
49
7
1
7
8
64
7
9
64
7
10
64
7
11
64
7
17
64
49
13
6
38
18
15
45
3
19
45
3
20
65
49
6
0
49
7
1
7
8
64
7
9
64
7
10
64
7
11
64
7
21
64
49
13
6
38
22
15
44
43
23
39
14
39
18
49
24
2
15
45
25
26
13
71
27
47
9
155
47
49
28
0
13
7
29
39
18
49
30
0
47
101
31
7
32
63
3
47
49
33
1
15
8
172
7
29
39
18
49
30
0
47
101
31
7
32
63
3
49
27
1
19
0
15
45
0
34
20
0
7
35
64
49
36
2
15
45
0
37
49
38
0
11
I
8
I
1
I
0
I
0
n
p
39
x
7
Compass
n
x
20
reset_configuration!
x
4
File
n
n
x
11
active_path
x
7
dirname
s
2
..
s
8
fixtures
s
7
sprites
s
6
public
s
6
images
x
4
join
x
16
@images_src_path
n
n
s
10
images-tmp
x
16
@images_tmp_path
n
n
s
20
generated-images-tmp
x
26
@generated_images_tmp_path
x
9
FileUtils
x
4
cp_r
x
8
StringIO
n
x
3
new
x
8
allocate
s
14
images_path = 
x
7
inspect
x
4
to_s
s
1


x
10
initialize
n
s
13
sprite_config
x
17
add_configuration
n
x
22
configure_sass_plugin!
p
19
I
-1
I
a
I
0
I
b
I
7
I
c
I
29
I
d
I
4b
I
e
I
6d
I
f
I
78
I
10
I
af
I
11
I
bb
I
12
I
c2
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
4
file
x
17
method_visibility
x
15
add_defn_method
x
8
teardown
M
1
n
n
x
8
teardown
i
25
45
0
1
49
2
0
15
44
43
3
39
4
49
5
1
15
44
43
3
39
6
49
7
1
11
I
2
I
0
I
0
I
0
n
p
8
x
7
Compass
n
x
20
reset_configuration!
x
9
FileUtils
x
16
@images_tmp_path
x
4
rm_r
x
26
@generated_images_tmp_path
x
5
rm_rf
p
9
I
-1
I
15
I
0
I
16
I
7
I
17
I
10
I
18
I
19
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
x
12
map_location
M
1
n
n
x
12
map_location
i
11
5
20
0
47
49
0
1
49
1
0
11
I
3
I
1
I
1
I
1
n
p
2
x
9
map_files
x
5
first
p
5
I
-1
I
1c
I
0
I
1d
I
b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
4
file
x
9
map_files
M
1
n
n
x
9
map_files
i
17
45
0
1
45
2
3
39
4
20
0
49
5
2
49
6
1
11
I
5
I
1
I
1
I
1
n
p
7
x
3
Dir
n
x
4
File
n
x
16
@images_tmp_path
x
4
join
x
4
glob
p
5
I
-1
I
20
I
0
I
21
I
11
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
4
glob
x
10
image_size
M
1
n
n
x
10
image_size
i
33
45
0
1
5
20
0
47
49
2
1
49
3
1
44
43
4
4
16
4
24
49
5
2
49
6
1
7
7
64
49
8
1
11
I
5
I
1
I
1
I
1
n
p
9
x
2
IO
n
x
12
map_location
x
4
read
x
5
Range
x
3
new
x
2
[]
s
2
NN
x
6
unpack
p
5
I
-1
I
24
I
0
I
25
I
21
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
4
file
x
9
image_md5
M
1
n
n
x
9
image_md5
i
54
45
0
1
43
2
13
71
3
47
9
23
47
49
4
0
13
47
49
5
0
15
8
26
49
3
0
19
1
15
20
1
45
6
7
5
20
0
47
49
8
1
49
9
1
49
10
1
15
20
1
49
11
0
11
I
6
I
2
I
1
I
1
n
p
12
x
6
Digest
n
x
3
MD5
x
3
new
x
8
allocate
x
10
initialize
x
2
IO
n
x
12
map_location
x
4
read
x
6
update
x
9
hexdigest
p
9
I
-1
I
28
I
0
I
29
I
1d
I
2a
I
30
I
2b
I
36
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
2
x
4
file
x
3
md5
x
6
render
M
1
n
n
x
6
render
i
242
7
0
20
0
47
101
1
63
2
19
0
15
45
2
3
49
4
0
19
1
15
20
1
7
5
3
13
18
3
49
6
2
15
15
20
1
7
7
7
8
13
18
3
49
6
2
15
15
20
1
7
9
7
10
13
18
3
49
6
2
15
15
20
1
7
11
14
2
49
12
1
13
10
91
15
44
43
13
78
49
14
1
13
18
3
49
6
2
15
8
95
18
2
16
2
15
20
1
7
11
49
12
1
7
15
14
2
49
12
1
13
10
149
15
45
2
16
43
17
13
71
18
47
9
137
47
49
19
0
13
47
49
20
0
15
8
140
49
18
0
13
18
3
49
6
2
15
8
153
18
2
16
2
15
45
21
22
43
23
13
71
18
47
9
181
47
49
19
0
13
20
0
20
1
47
49
20
2
15
8
188
20
0
20
1
49
18
2
49
24
0
19
2
15
7
25
20
2
7
26
64
7
27
64
49
28
2
7
29
13
70
9
225
15
44
43
30
7
31
78
49
18
2
6
29
7
32
64
49
28
2
49
33
0
47
101
1
7
34
63
3
11
I
8
I
3
I
1
I
1
n
p
35
s
19
@import "compass"; 
x
4
to_s
x
7
Compass
n
x
19
sass_engine_options
x
13
line_comments
x
3
[]=
x
5
style
x
8
expanded
x
6
syntax
x
4
scss
x
7
compass
x
2
[]
x
4
Hash
x
16
new_from_literal
x
6
logger
n
x
10
NullLogger
x
3
new
x
8
allocate
x
10
initialize
x
4
Sass
n
x
6
Engine
x
6
render
s
6
      
s
17
@charset "UTF-8";
s
0

x
4
gsub
n
x
6
Regexp
s
2
\n
s
7

      
x
5
strip
s
1


p
21
I
-1
I
2e
I
0
I
2f
I
c
I
30
I
15
I
31
I
22
I
32
I
30
I
33
I
3e
I
34
I
60
I
35
I
9a
I
36
I
c2
I
38
I
f2
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
3
x
4
scss
x
7
options
x
3
css
s
30
should generate sprite classes
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
59
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
15
5
5
7
4
64
47
49
7
1
7
8
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
9
s
67
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sbbc18e2129.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -10px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
x
9
image_md5
s
32
7349a0f4e88ea80abddcf6ac2486abe3
p
9
I
0
I
3c
I
b
I
40
I
16
I
4d
I
2a
I
4e
I
3b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
x
2
it
s
73
should output and serve sprite files using the generated images directory
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
147
45
0
1
49
2
0
15
45
3
4
13
71
5
47
9
52
47
49
6
0
13
7
7
39
8
49
9
0
47
101
10
7
11
39
12
49
9
0
47
101
10
7
13
63
5
47
49
14
1
15
8
79
7
7
39
8
49
9
0
47
101
10
7
11
39
12
49
9
0
47
101
10
7
13
63
5
49
5
1
19
0
15
45
0
15
20
0
7
16
64
49
17
2
15
45
0
18
49
19
0
15
5
7
20
64
47
49
21
1
19
1
15
5
45
22
23
39
12
47
101
10
7
24
63
2
49
25
1
49
26
0
47
49
27
1
15
5
7
28
64
20
1
47
49
29
2
11
I
a
I
2
I
0
I
0
I
-2
p
30
x
7
Compass
n
x
20
reset_configuration!
x
8
StringIO
n
x
3
new
x
8
allocate
s
20
      images_path = 
x
16
@images_tmp_path
x
7
inspect
x
4
to_s
s
31

      generated_images_path = 
x
26
@generated_images_tmp_path
s
56

      http_generated_images_path = "/images/generated"

x
10
initialize
n
s
13
sprite_config
x
17
add_configuration
n
x
22
configure_sass_plugin!
s
67
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
x
3
Dir
n
s
15
/squares-s*.png
x
4
glob
x
5
first
x
14
assert_not_nil
s
324
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/images/generated/squares-sbbc18e2129.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -10px;
      }

x
14
assert_correct
p
25
I
0
I
52
I
7
I
53
I
15
I
54
I
21
I
55
I
34
I
54
I
40
I
55
I
4f
I
53
I
52
I
58
I
5e
I
59
I
65
I
5a
I
70
I
5e
I
88
I
5f
I
93
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
2
x
4
file
x
3
css
s
46
should generate sprite classes with dimensions
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
107
      $squares-sprite-dimensions: true;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
393
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sbbc18e2129.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
        height: 10px;
        width: 10px;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -10px;
        height: 20px;
        width: 20px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
6f
I
b
I
74
I
16
I
85
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
27
should provide sprite mixin
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
192
      @import "squares/*.png";

      .cubicle {
        @include squares-sprite("ten-by-ten");
      }

      .large-cube {
        @include squares-sprite("twenty-by-twenty", true);
      }

x
6
render
s
300
      .squares-sprite, .cubicle, .large-cube {
        background: url('/squares-sbbc18e2129.png') no-repeat;
      }
      
      .cubicle {
        background-position: 0 0;
      }
      
      .large-cube {
        background-position: 0 -10px;
        height: 20px;
        width: 20px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
89
I
b
I
94
I
16
I
a3
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
43
should be possible to change the base class
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
77
      $squares-sprite-base-class: ".circles";
      @import "squares/*.png";

x
6
render
s
88
      .circles {
        background: url('/squares-sbbc18e2129.png') no-repeat;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
a9
I
b
I
ad
I
16
I
b2
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
70
should calculate the spacing between images but not before first image
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
63
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
108
      $squares-ten-by-ten-spacing: 33px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-s563a5e0855.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -43px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
b6
I
b
I
bb
I
16
I
c8
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
43
should calculate the spacing between images
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
63
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
114
      $squares-twenty-by-twenty-spacing: 33px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-s4ea353fa6d.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -43px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
cc
I
b
I
d1
I
16
I
de
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
51
should calculate the maximum spacing between images
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
74
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
155
      $squares-ten-by-ten-spacing: 44px;
      $squares-twenty-by-twenty-spacing: 33px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sf4771cb124.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -54px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
e2
I
b
I
e8
I
16
I
f5
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
69
should calculate the maximum spacing between images in reversed order
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
74
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
155
      $squares-ten-by-ten-spacing: 33px;
      $squares-twenty-by-twenty-spacing: 44px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sc82d6f3cf4.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -54px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
f9
I
b
I
ff
I
16
I
10c
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
51
should calculate the default spacing between images
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
52
35
2
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
97
      $squares-spacing: 22px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-s2f4aa65dcf.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -32px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
p
7
I
0
I
110
I
b
I
115
I
16
I
122
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
44
should use position adjustments in functions
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
59
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
15
5
5
7
4
64
47
49
7
1
7
8
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
9
s
468
      $squares: sprite-map("squares/*.png", $position: 100%);
      .squares-sprite {
        background: $squares no-repeat;
      }

      .adjusted-percentage {
        background-position: sprite-position($squares, ten-by-ten, 100%);
      }

      .adjusted-px-1 {
        background-position: sprite-position($squares, ten-by-ten, 4px);
      }

      .adjusted-px-2 {
        background-position: sprite-position($squares, twenty-by-twenty, -3px, 2px);
      }

x
6
render
s
329
      .squares-sprite {
        background: url('/squares-sce5dc30797.png') no-repeat;
      }
      
      .adjusted-percentage {
        background-position: 100% 0;
      }
      
      .adjusted-px-1 {
        background-position: -6px 0;
      }
      
      .adjusted-px-2 {
        background-position: -3px -8px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
x
9
image_md5
s
32
9cc7ce48cfaf304381c2d08adefd2fb6
p
9
I
0
I
126
I
b
I
138
I
16
I
149
I
2a
I
14a
I
3b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
41
should use position adjustments in mixins
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
59
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
15
5
5
7
4
64
47
49
7
1
7
8
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
9
s
377
      $squares-position: 100%;
      @import "squares/*.png";

      .adjusted-percentage {
        @include squares-sprite("ten-by-ten", $offset-x: 100%);
      }

      .adjusted-px-1 {
        @include squares-sprite("ten-by-ten", $offset-x: 4px);
      }

      .adjusted-px-2 {
        @include squares-sprite("twenty-by-twenty", $offset-x: -3px, $offset-y: 2px);
      }

x
6
render
s
383
      .squares-sprite, .adjusted-percentage, .adjusted-px-1, .adjusted-px-2 {
        background: url('/squares-sce5dc30797.png') no-repeat;
      }
      
      .adjusted-percentage {
        background-position: 100% 0;
      }
      
      .adjusted-px-1 {
        background-position: -6px 0;
      }
      
      .adjusted-px-2 {
        background-position: -3px -8px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
x
9
image_md5
s
32
9cc7ce48cfaf304381c2d08adefd2fb6
p
9
I
0
I
14e
I
b
I
15e
I
16
I
16f
I
2a
I
170
I
3b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
23
should repeat the image
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
59
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
20
4
30
35
2
47
49
6
2
15
5
5
7
4
64
47
49
7
1
7
8
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
9
s
98
      $squares-repeat: repeat;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
307
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sbab486c25a.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: 0 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: 0 -10px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
x
9
image_md5
s
32
a77a2fd43f04d791722b706aa7c9f1c1
p
9
I
0
I
174
I
b
I
179
I
16
I
186
I
2a
I
187
I
3b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
72
should allow the position of a sprite to be specified in absolute pixels
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
59
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
15
5
5
7
4
64
47
49
5
1
4
30
4
30
35
2
47
49
6
2
15
5
5
7
4
64
47
49
7
1
7
8
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
9
s
157
      $squares-ten-by-ten-position: 10px;
      $squares-twenty-by-twenty-position: 10px;
      @import "squares/*.png";
      @include all-squares-sprites;

x
6
render
s
315
      .squares-sprite, .squares-ten-by-ten, .squares-twenty-by-twenty {
        background: url('/squares-sb9d9a8ca6a.png') no-repeat;
      }
      
      .squares-ten-by-ten {
        background-position: -10px 0;
      }
      
      .squares-twenty-by-twenty {
        background-position: -10px -10px;
      }

x
14
assert_correct
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
x
9
image_md5
s
32
9856ced9e8211b6b28ff782019a0d905
p
9
I
0
I
18b
I
b
I
191
I
16
I
19e
I
2a
I
19f
I
3b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
53
should provide a nice errors for lemonade's old users
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
39
5
45
0
1
43
2
56
3
47
50
4
1
15
5
45
0
5
43
2
56
6
47
50
4
1
15
5
45
0
7
43
2
56
8
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
9
x
4
Sass
n
x
11
SyntaxError
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
9
5
7
0
64
47
49
1
1
11
I
3
I
0
I
0
I
0
I
-2
p
2
s
90
        .squares {
          background: sprite-url("squares/*.png") no-repeat;
        }

x
6
render
p
3
I
0
I
1a4
I
9
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
x
12
assert_raise
n
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
11
5
7
0
64
47
49
1
1
19
0
11
I
4
I
1
I
0
I
0
I
-2
p
2
s
107
        .squares {
          background: sprite-image("squares/twenty-by-twenty.png") no-repeat;
        }

x
6
render
p
3
I
0
I
1ab
I
b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
n
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
11
5
7
0
64
47
49
1
1
19
0
11
I
4
I
1
I
0
I
0
I
-2
p
2
s
144
        @import "squares/*.png";

        .squares {
          background: sprite-position("squares/twenty-by-twenty.png") no-repeat;
        }

x
6
render
p
3
I
0
I
1b2
I
b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
p
7
I
0
I
1a3
I
d
I
1aa
I
1a
I
1b1
I
27
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
s
38
should work even if @import is missing
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
110
      .squares {
        background: sprite(sprite-map("squares/*.png"), twenty-by-twenty) no-repeat;
      }

x
6
render
s
96
      .squares {
        background: url('/squares-sd817b59156.png') 0 -10px no-repeat;
      }

x
14
assert_correct
p
5
I
0
I
1bd
I
b
I
1c2
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
72
should calculate corret sprite demsions when givin spacing via issue#253
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
42
5
7
0
64
47
49
1
1
19
0
15
5
5
7
2
64
47
49
3
1
4
20
4
40
35
2
47
49
4
2
15
5
20
0
7
5
64
47
49
6
2
11
I
6
I
1
I
0
I
0
I
-2
p
7
s
263
      $squares-spacing: 10px;
      @import "squares/*.png";
      .foo {
        @include sprite-background-position($squares-sprites, "twenty-by-twenty");
      }
      .bar {
        @include sprite-background-position($squares-sprites, "ten-by-ten");
      }

x
6
render
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
s
223
      .squares-sprite {
        background: url('/squares-s555875d730.png') no-repeat;
      }
      
      .foo {
        background-position: 0 -20px;
      }
      
      .bar {
        background-position: 0 0;
      }

x
14
assert_correct
p
7
I
0
I
1ca
I
b
I
1d4
I
1f
I
1d5
I
2a
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
61
should render correct sprite with css selectors via issue#248
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
71
      @import "selectors/*.png";
      @include all-selectors-sprites;

x
6
render
s
693
      .selectors-sprite, .selectors-ten-by-ten {
        background: url('/selectors-s7e84acb3d2.png') no-repeat;
      }
      
      .selectors-ten-by-ten {
        background-position: 0 0;
      }
      .selectors-ten-by-ten:hover, .selectors-ten-by-ten.ten-by-ten_hover, .selectors-ten-by-ten.ten-by-ten-hover {
        background-position: 0 -20px;
      }
      .selectors-ten-by-ten:target, .selectors-ten-by-ten.ten-by-ten_target, .selectors-ten-by-ten.ten-by-ten-target {
        background-position: 0 -30px;
      }
      .selectors-ten-by-ten:active, .selectors-ten-by-ten.ten-by-ten_active, .selectors-ten-by-ten.ten-by-ten-active {
        background-position: 0 -10px;
      }

x
14
assert_correct
p
5
I
0
I
1e5
I
b
I
1e9
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
59
should honor offsets when rendering selectors via issue#449
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
105
      @import "selectors/*.png";
      @include all-selectors-sprites($offset-x: 20px, $offset-y: 20px);

x
6
render
s
703
      .selectors-sprite, .selectors-ten-by-ten {
        background: url('/selectors-s7e84acb3d2.png') no-repeat;
      }
      
      .selectors-ten-by-ten {
        background-position: 20px 20px;
      }
      .selectors-ten-by-ten:hover, .selectors-ten-by-ten.ten-by-ten_hover, .selectors-ten-by-ten.ten-by-ten-hover {
        background-position: 20px 0;
      }
      .selectors-ten-by-ten:target, .selectors-ten-by-ten.ten-by-ten_target, .selectors-ten-by-ten.ten-by-ten-target {
        background-position: 20px -10px;
      }
      .selectors-ten-by-ten:active, .selectors-ten-by-ten.ten-by-ten_active, .selectors-ten-by-ten.ten-by-ten-active {
        background-position: 20px 10px;
      }

x
14
assert_correct
p
5
I
0
I
1fe
I
b
I
202
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
63
should render correct sprite with css selectors via magic mixin
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
97
      @import "selectors/*.png";
      a {
        @include selectors-sprite(ten-by-ten)
      }

x
6
render
s
473
      .selectors-sprite, a {
        background: url('/selectors-s7e84acb3d2.png') no-repeat;
      }
      
      a {
        background-position: 0 0;
      }
      a:hover, a.ten-by-ten_hover, a.ten-by-ten-hover {
        background-position: 0 -20px;
      }
      a:target, a.ten-by-ten_target, a.ten-by-ten-target {
        background-position: 0 -30px;
      }
      a:active, a.ten-by-ten_active, a.ten-by-ten-active {
        background-position: 0 -10px;
      }

x
14
assert_correct
p
5
I
0
I
217
I
b
I
21d
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
66
should not render corret sprite with css selectors via magic mixin
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
143
      @import "selectors/*.png";
      a {
        $disable-magic-sprite-selectors:true;
        @include selectors-sprite(ten-by-ten)
      }

x
6
render
s
161
      .selectors-sprite, a {
        background: url('/selectors-s7e84acb3d2.png') no-repeat;
      }
      
      a {
        background-position: 0 0;
      }

x
14
assert_correct
p
5
I
0
I
233
I
b
I
23a
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
87
should render corret sprite with css selectors via magic mixin with the correct offsets
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
111
      @import "selectors/*.png";
      a {
        @include selectors-sprite(ten-by-ten, false, 5, -5)
      }

x
6
render
s
484
      .selectors-sprite, a {
        background: url('/selectors-s7e84acb3d2.png') no-repeat;
      }
      
      a {
        background-position: 5px -5px;
      }
      a:hover, a.ten-by-ten_hover, a.ten-by-ten-hover {
        background-position: 5px -25px;
      }
      a:target, a.ten-by-ten_target, a.ten-by-ten-target {
        background-position: 5px -35px;
      }
      a:active, a.ten-by-ten_active, a.ten-by-ten-active {
        background-position: 5px -15px;
      }

x
14
assert_correct
p
5
I
0
I
246
I
b
I
24c
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
62
should raise error on filenames that are not valid sass syntax
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
13
5
45
0
1
43
2
56
3
47
50
4
1
11
I
4
I
0
I
0
I
0
I
-2
p
5
x
7
Compass
n
x
5
Error
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
11
5
7
0
64
47
49
1
1
19
0
11
I
4
I
1
I
0
I
0
I
-2
p
2
s
99
        @import "prefix/*.png";
        a {
          @include squares-sprite(20-by-20);
        }

x
6
render
p
3
I
0
I
262
I
b
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
x
12
assert_raise
p
3
I
0
I
261
I
d
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
s
51
should generate sprite with bad repeat-x dimensions
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
97
      $ko-starbg26x27-repeat: repeat-x;
      @import "ko/*.png";
      @include all-ko-sprites;

x
6
render
s
284
      .ko-sprite, .ko-default_background, .ko-starbg26x27 {
        background: url('/ko-sd6b4d44430.png') no-repeat;
      }
      
      .ko-default_background {
        background-position: 0 0;
      }
      
      .ko-starbg26x27 {
        background-position: 0 -128px;
      }

x
14
assert_correct
p
5
I
0
I
26c
I
b
I
271
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
48
should generate a sprite and remove the old file
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
68
45
0
1
45
2
3
39
4
7
5
64
49
6
2
49
7
1
15
5
79
5
7
8
64
47
49
9
1
49
10
0
47
49
11
2
15
5
7
12
64
47
49
13
1
19
0
15
5
79
5
7
8
64
47
49
9
1
49
10
0
7
14
64
47
49
11
3
11
I
6
I
1
I
0
I
0
I
-2
p
15
x
9
FileUtils
n
x
4
File
n
x
16
@images_tmp_path
s
24
selectors-scc8834Fdd.png
x
4
join
x
5
touch
s
16
selectors-s*.png
x
9
map_files
x
4
size
x
12
assert_equal
s
143
      @import "selectors/*.png";
      a {
        $disable-magic-sprite-selectors:true;
        @include selectors-sprite(ten-by-ten)
      }

x
6
render
s
20
File was not removed
p
9
I
0
I
281
I
12
I
282
I
24
I
283
I
2f
I
28a
I
44
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
52
should generate a sprite and NOT remove the old file
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
68
45
0
1
45
2
3
39
4
7
5
64
49
6
2
49
7
1
15
5
79
5
7
8
64
47
49
9
1
49
10
0
47
49
11
2
15
5
7
12
64
47
49
13
1
19
0
15
5
80
5
7
8
64
47
49
9
1
49
10
0
7
14
64
47
49
11
3
11
I
6
I
1
I
0
I
0
I
-2
p
15
x
9
FileUtils
n
x
4
File
n
x
16
@images_tmp_path
s
26
selectors-scc8834Ftest.png
x
4
join
x
5
touch
s
16
selectors-s*.png
x
9
map_files
x
4
size
x
12
assert_equal
s
177
      $selectors-clean-up: false;
      @import "selectors/*.png";
      a {
        $disable-magic-sprite-selectors:true;
        @include selectors-sprite(ten-by-ten)
      }

x
6
render
s
16
File was removed
p
9
I
0
I
28e
I
12
I
28f
I
24
I
290
I
2f
I
298
I
44
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
53
should generate a sprite if the sprite is a colorname
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
28
5
7
0
64
47
49
1
1
19
0
15
5
20
0
49
2
0
10
22
2
8
23
3
47
49
3
1
11
I
4
I
1
I
0
I
0
I
-2
p
4
s
86
      @import "colors/*.png";
      a {
        @include colors-sprite(blue);
      }

x
6
render
x
6
empty?
x
6
assert
p
5
I
0
I
29c
I
b
I
2a2
I
1c
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
44
should generate a sprite from nested folders
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
22
5
7
0
64
47
49
1
1
19
0
15
5
20
0
7
2
64
47
49
3
2
11
I
5
I
1
I
0
I
0
I
-2
p
4
s
68
      @import "nested/**/*.png";
      @include all-nested-sprites;

x
6
render
s
189
      .nested-sprite, .nested-ten-by-ten {
        background: url('/nested-s7b93e0b6bf.png') no-repeat;
      }
      
      .nested-ten-by-ten {
        background-position: 0 0;
      }

x
14
assert_correct
p
5
I
0
I
2a6
I
b
I
2aa
I
16
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
1
x
3
css
s
31
should create horizontal sprite
M
1
p
2
x
9
for_block
t
n
x
11
SpritesTest
i
83
5
7
0
64
47
49
1
1
19
0
15
5
4
30
4
20
35
2
5
7
2
64
47
49
3
1
47
49
4
2
15
7
5
64
19
1
15
5
20
0
7
6
64
7
7
64
49
8
2
7
9
64
7
7
64
49
8
2
20
1
7
6
64
7
7
64
49
8
2
7
9
64
7
7
64
49
8
2
47
49
10
2
11
I
8
I
2
I
0
I
0
I
-2
p
11
s
267
      $squares-layout:horizontal;
      @import "squares/*.png";
      .foo {
        @include sprite-background-position($squares-sprites, "twenty-by-twenty");
      }
      .bar {
        @include sprite-background-position($squares-sprites, "ten-by-ten");
      }

x
6
render
s
14
squares-s*.png
x
10
image_size
x
12
assert_equal
s
211
      .squares-sprite {
        background: url('/squares-s4bd95c5c56.png') no-repeat;
      }

      .foo {
        background-position: -10px 0;
      }

      .bar {
        background-position: 0 0;
      }

s
1


s
0

x
4
gsub
s
1
 
x
14
assert_correct
p
9
I
0
I
2b6
I
b
I
2c0
I
1f
I
2c1
I
25
I
2ce
I
53
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
2
x
3
css
x
9
other_css
p
73
I
2
I
a
I
10
I
15
I
1e
I
1c
I
2c
I
20
I
3a
I
24
I
48
I
28
I
56
I
2e
I
64
I
3b
I
6f
I
51
I
7a
I
6e
I
85
I
88
I
90
I
a8
I
9b
I
b5
I
a6
I
cb
I
b1
I
e1
I
bc
I
f8
I
c7
I
10f
I
d2
I
125
I
dd
I
14d
I
e8
I
173
I
f3
I
18a
I
fe
I
1a2
I
109
I
1bc
I
114
I
1c9
I
11f
I
1e4
I
12a
I
1fd
I
135
I
216
I
140
I
232
I
14b
I
245
I
156
I
260
I
161
I
26b
I
16c
I
280
I
177
I
28d
I
182
I
29b
I
18d
I
2a5
I
198
I
2b5
I
1a3
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
x
13
attach_method
p
13
I
0
I
1
I
9
I
2
I
12
I
3
I
1b
I
4
I
24
I
5
I
2d
I
8
I
50
x
65
/Users/crispee/Projects/compass/test/integrations/sprites_test.rb
p
0
